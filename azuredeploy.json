{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "_generator": {
            "name": "bicep",
            "version": "0.25.53.49325",
            "templateHash": "2386182166504519146"
        }
    },
    "parameters": {
        "vmName": {
            "type": "string",
            "defaultValue": "VM-RIN",
            "metadata": {
                "description": "Nome da máquina virtual"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "[toLower(format('{0}-{1}', parameters('vmName'), uniqueString(resourceGroup().id)))]",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D4s_v3",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "virtualNetworkName": {
            "type": "string",
            "defaultValue": "vNet",
            "metadata": {
                "description": "Name of the VNET"
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "Subnet",
            "metadata": {
                "description": "Name of the subnet in the virtual network"
            }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "SecGroupNet",
            "metadata": {
                "description": "Name of the Network Security Group"
            }
        },
        "securityType": {
            "type": "string",
            "defaultValue": "TrustedLaunch",
            "allowedValues": [
                "Standard",
                "TrustedLaunch"
            ],
            "metadata": {
                "description": "Security Type of the Virtual Machine."
            }
        }
    },
    "variables": {
        "imageReference": {
            "publisher": "Oracle",
            "offer": "Oracle-Linux",
            "sku": "ol810-lvm-gen2",
            "version": "8.10.5"
        },
        "publicIPAddressName": "[format('{0}PublicIP', parameters('vmName'))]",
        "networkInterfaceName": "[format('{0}NetInt', parameters('vmName'))]",
        "osDiskType": "StandardSSD_LRS",
        "osDiskSizeGB": 120,
        "dataDiskType": "Premium_LRS",
        "dataDiskSizeGB": 300,
        "subnetAddressPrefix": "10.1.0.0/24",
        "addressPrefix": "10.1.0.0/16",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]",
                        "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        },
        "securityProfileJson": {
            "uefiSettings": {
                "secureBootEnabled": true,
                "vTpmEnabled": true
            },
            "securityType": "[parameters('securityType')]"
        },
        "customData": "#!/bin/bash\n\n# Função para verificar erros\ncheck_error() {\n    if [ $? -ne 0 ]; then\n        echo \"Erro: $1\"\n        exit 1\n    fi\n}\n\necho \"Aguardando discos ficarem disponíveis...\"\nwhile [ ! -b /dev/sda ] || [ ! -b /dev/sdc ]; do\n    sleep 1\ndone\n\n# Configuração do disco do sistema (sda)\necho \"1. Redimensionando a partição do sistema...\"\n# Corrigir a tabela GPT\nparted /dev/sda disk_set pmbr_boot on\ncheck_error \"Falha ao configurar pmbr_boot\"\n\n# Redimensionar a partição sda2\nparted /dev/sda resizepart 2 95%\ncheck_error \"Falha ao redimensionar partição sda2\"\n\n# Redimensionar o volume físico\npvresize /dev/sda2\ncheck_error \"Falha ao redimensionar volume físico sda2\"\n\necho \"2. Criando volumes lógicos do sistema...\"\n# Criar volumes lógicos\nlvcreate -L 9.5G -n rootvg_swap rootvg\ncheck_error \"Falha ao criar volume swap\"\n\nlvcreate -L 10G -n rootvg_tmp rootvg\ncheck_error \"Falha ao criar volume tmp\"\n\nlvcreate -L 10G -n rootvg_var rootvg\ncheck_error \"Falha ao criar volume var\"\n\nlvcreate -L 20G -n rootvg_home rootvg\ncheck_error \"Falha ao criar volume home\"\n\nlvcreate -L 10G -n rootvg_opt rootvg\ncheck_error \"Falha ao criar volume opt\"\n\necho \"3. Formatando volumes lógicos...\"\n# Formatar volumes\nmkswap /dev/rootvg/rootvg_swap\ncheck_error \"Falha ao formatar swap\"\n\nmkfs.xfs -f /dev/rootvg/rootvg_tmp\ncheck_error \"Falha ao formatar tmp\"\n\nmkfs.xfs -f /dev/rootvg/rootvg_var\ncheck_error \"Falha ao formatar var\"\n\nmkfs.xfs -f /dev/rootvg/rootvg_home\ncheck_error \"Falha ao formatar home\"\n\nmkfs.xfs -f /dev/rootvg/rootvg_opt\ncheck_error \"Falha ao formatar opt\"\n\necho \"4. Criando pontos de montagem...\"\n# Criar diretórios\nmkdir -p /tmp\nmkdir -p /var\nmkdir -p /home/securonix\nmkdir -p /opt\n\necho \"5. Configurando /etc/fstab...\"\n# Adicionar entradas ao fstab\ncat << EOF >> /etc/fstab\n/dev/rootvg/rootvg_swap swap swap defaults 0 0\n/dev/rootvg/rootvg_tmp /tmp xfs defaults 0 0\n/dev/rootvg/rootvg_var /var xfs defaults 0 0\n/dev/rootvg/rootvg_home /home/securonix xfs defaults 0 0\n/dev/rootvg/rootvg_opt /opt xfs defaults 0 0\nEOF\n\necho \"6. Configurando disco de dados (sdc)...\"\n# Configurar o disco de dados\nparted --script /dev/sdc mklabel gpt\ncheck_error \"Falha ao criar tabela GPT no sdc\"\n\nparted --script /dev/sdc mkpart primary 0% 100%\ncheck_error \"Falha ao criar partição no sdc\"\n\npvcreate /dev/sdc1\ncheck_error \"Falha ao criar PV no sdc1\"\n\nvgcreate --physicalextentsize 32 vg_scnx /dev/sdc1\ncheck_error \"Falha ao criar VG no sdc1\"\n\nlvcreate --extents 100%FREE vg_scnx --name securonix --yes\ncheck_error \"Falha ao criar LV securonix\"\n\nmkdir -p /Securonix\ncheck_error \"Falha ao criar diretório Securonix\"\n\nmkfs.xfs -f /dev/vg_scnx/securonix\ncheck_error \"Falha ao formatar volume Securonix\"\n\necho \"/dev/vg_scnx/securonix /Securonix xfs defaults 0 0\" >> /etc/fstab\n\necho \"7. Montando volumes...\"\nmount -a\ncheck_error \"Falha ao montar volumes\"\n\nswapon -a\ncheck_error \"Falha ao ativar swap\"\n\necho \"8. Recarregando systemd...\"\nsystemctl daemon-reload\ncheck_error \"Falha ao recarregar systemd\"\n\necho \"Configuração concluída com sucesso!\"\ndf -h"
    },
    "resources": [
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2023-09-01",
            "name": "[variables('networkInterfaceName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '2023-09-01').subnets[0].id]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2023-09-01",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "SSH",
                        "properties": {
                            "priority": 1000,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2023-09-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAddressPrefix')]",
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2023-09-01",
            "name": "[variables('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "publicIPAddressVersion": "IPv4",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsLabelPrefix')]"
                },
                "idleTimeoutInMinutes": 4
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2023-09-01",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        },
                        "diskSizeGB": "[variables('osDiskSizeGB')]"
                    },
                    "imageReference": "[variables('imageReference')]",
                    "dataDisks": [
                        {
                            "lun": 0,
                            "name": "[format('{0}-datadisk', parameters('vmName'))]",
                            "createOption": "Empty",
                            "diskSizeGB": "[variables('dataDiskSizeGB')]",
                            "managedDisk": {
                                "storageAccountType": "[variables('dataDiskType')]"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), null(), variables('linuxConfiguration'))]",
                    "customData": "[base64(variables('customData'))]"
                },
                "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), null())]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
            ]
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        },
        "hostname": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2023-09-01').dnsSettings.fqdn]"
        },
        "sshCommand": {
            "type": "string",
            "value": "[format('ssh {0}@{1}', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName')), '2023-09-01').dnsSettings.fqdn)]"
        }
    }
}
